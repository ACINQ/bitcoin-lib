package fr.acinq.bitcoin

import fr.acinq.bitcoin.Script.{Runner, Context}
import org.scalatest.FlatSpec

class PuzzleSpec extends FlatSpec {
  def validateTransaction(tx: Transaction, inputs: Seq[Transaction]) : Unit = {
    val txMap = inputs.map(t => t.txid -> t).toMap
    for (i <- 0 until tx.txIn.length) {
      val prevOutputScript = txMap(tx.txIn(i).outPoint.txid).txOut(tx.txIn(i).outPoint.index.toInt).publicKeyScript
      val ctx = new Context(tx, i, prevOutputScript)
      val runner = new Runner(ctx)
      val result = runner.verifyScripts(tx.txIn(i).signatureScript, prevOutputScript)
      assert(result)
    }
  }

  "bitcoin-lib" should "handle puzzle a59012de71dafa1510fd57d339ff488d50da4808c9fd4c001d6de8874d8aa26d" in {
    val tx = Transaction.read("010000000298a4782ee3399a79f2b6a7c70f9f810986a42e819c14340fa35e813aac9681ae000000006e4830450220087ede38729e6d35e4f515505018e659222031273b7366920f393ee3ab17bc1e022100ca43164b757d1a6d1235f13200d4b5f76dd8fda4ec9fc28546b2df5b1211e8df03210275983913e60093b767e85597ca9397fb2f418e57f998d6afbbc536116085b1cb02ac91ffffffffa939fd811ba1c70a3ec3d955717418fe4a24dd5e597f7a47230674c853b7f360000000006d4830450220087ede38729e6d35e4f515505018e659222031273b7366920f393ee3ab17bc1e022100ca43164b757d1a6d1235f13200d4b5f76dd8fda4ec9fc28546b2df5b1211e8df03210275983913e60093b767e85597ca9397fb2f418e57f998d6afbbc536116085b1cb01acffffffff01a08601000000000017a9146c21ac707cb37c90794294acda011060ef0fc0118700000000")
    val inputs = Seq(
      Transaction.read("01000000015a7005f8a0792562bd20b9eff51c09f3e9e6522174c04098762eab1be1afc057000000006b4830450221009c290467721372d171f0d888bb193b70e6c07b116112ef23483ecbe030938636022075ce1f6be389288a4ed7c81725836a2700b539db85aeb757160c950a78fa29c6012103bc9d9e9b50db4fc3f1eb93b9a3e2cc22e179dab4df22179a34413f86078444a6ffffffff02a08601000000000017a914827fe37ec405346ad4e995323cea83559537b89e87f8e03500000000001976a914f21d36cb22c671a4b022bc953890bb9c45820a1c88ac00000000"),
      Transaction.read("0100000001ae9e6387e20d0fc30aa043ed735e33e805200d65e9d33ab503913f7436001e6b000000006b483045022100b5e73e71be331971d57ad6d804020a70a88c5617d72584d2ec76f327316da8b3022014c0d150d67847cc9c3731390691309f0465e46f4c20ee17aafc13794f8d5152012103de3d3c06403ba70b3efd5b139eb09aff8b8260bfe838a831a44666a794f5e84dffffffff02a08601000000000017a91417be79cf51aa88feebb0a25e9d6a153ead585e5987583c3900000000001976a914285fb1890240afe00b852d1b6eab49a767bc462288ac00000000")
    )
    validateTransaction(tx, inputs)
  }
  it should "handle puzzle 61d47409a240a4b67ce75ec4dffa30e1863485f8fe64a6334410347692f9e60e" in {
    val tx = Transaction.read("01000000012edfb7a1a41b61e46eae1032c38d8792eacb79f7a6599dd24372f4a3e88a31700000000006030000800191ffffffff010000000000000000016a00000000")
    val inputs = Seq(
      Transaction.read("010000000192cad3c8e41d1e2f1baf6f8a991c3db6bf67a60c49e963beb44f8e41a78073dd010000008b48304502203b4cb2c60cd688129ec89da31464ce9ce07da56125425afdf9fd67559e708b3c0221008174b7a26787a8eb30460a699f584518351a741bc37775dc702d7f14e8f53e340141043a58cccd11db5dfc34e1433eef0b2b3bf6b947113d5e45562a095781663c919dda444017ab9a7c0e458478e7ef3edf5233eb476c1cb62ecfbb03bc4e22e40333ffffffff0250c300000000000017a914bb89dd62e80d1801df9aa570769b012f246c4f6d8730ee9a00000000001976a91463e8c29bfd51ee98778481c920bb6d288a220f9188ac00000000")
    )
    validateTransaction(tx, inputs)
  }
}
